version: "3.7"

services:
  mysql:
    image: mysql:5.7.31
    container_name: mysql
    ports:
      - "3301:3306"
    networks:
        movierec:
            ipv4_address: 172.19.0.2
    volumes:               
      - "/temp/dockerMovieRec/mysql/conf:/etc/mysql/conf.d"
      - "/temp/dockerMovieRec/mysql/logs:/logs"
      - "/temp/dockerMovieRec/mysql/data:/var/lib/mysql"
    environment:
      MYSQL_ROOT_PASSWORD: "abc123456"
  spark2:
    image: xumj1996docker/spark:v1
    container_name: spark2
    tty: true
    depends_on:
      - mysql
    networks:
        movierec:
            ipv4_address: 172.19.0.3
    volumes:               
      - "/temp/dockerMovieRec/sparks/spark2/data:/data" #data volume
      - "/temp/dockerMovieRec/sparks/spark_shared/conf:/usr/local/spark-1.6.2-bin-hadoop2.6/conf"
      - "/temp/dockerMovieRec/sparks/hadoop_shared:/usr/local/hadoop-2.6.4/etc/hadoop"
      - "/temp/dockerMovieRec/sparks/hosts:/etc/hosts"
      - "/temp/dockerMovieRec/sparks/profile:/etc/profile"
  spark3:
    image: xumj1996docker/spark:v1
    container_name: spark3
    tty: true
    depends_on:
      - spark2
    networks:
        movierec:
            ipv4_address: 172.19.0.4
    volumes:               
      - "/temp/dockerMovieRec/sparks/spark3/data:/data" #data volume
      - "/temp/dockerMovieRec/sparks/spark_shared/conf:/usr/local/spark-1.6.2-bin-hadoop2.6/conf"
      - "/temp/dockerMovieRec/sparks/hadoop_shared:/usr/local/hadoop-2.6.4/etc/hadoop"
      - "/temp/dockerMovieRec/sparks/hosts:/etc/hosts"
      - "/temp/dockerMovieRec/sparks/profile:/etc/profile"
  spark1:
    image: xumj1996docker/spark:v1
    container_name: spark1
    tty: true
    depends_on:
      - spark3
    networks:
        movierec:
            ipv4_address: 172.19.0.5
    volumes:               
      - "/temp/dockerMovieRec/sparks/spark1/data:/data" #data volume
      - "/temp/dockerMovieRec/sparks/spark1/hive/conf:/usr/local/apache-hive-1.2.1-bin/conf" #master hive
      - "/temp/dockerMovieRec/sparks/spark_shared/conf:/usr/local/spark-1.6.2-bin-hadoop2.6/conf"
      - "/temp/dockerMovieRec/sparks/hadoop_shared:/usr/local/hadoop-2.6.4/etc/hadoop"
      - "/temp/dockerMovieRec/sparks/hosts:/etc/hosts"
      - "/temp/dockerMovieRec/sparks/profile:/etc/profile"
    environment:
      HADOOP_HOME: "/usr/local/hadoop-2.6.4/"
    command:
      - bash
      - -c 
      - |
        service ssh start
        /usr/local/hadoop-2.6.4/sbin/start-all.sh
        /usr/local/spark-1.6.2-bin-hadoop2.6/sbin/start-all.sh
        /usr/local/apache-hive-1.2.1-bin/bin/hive --service metastore -p 9083
  tomcat:
    image: tomcat:8.5
    container_name: tomcat
    restart: always
    volumes: 
      - "/temp/dockerMovieRec/tomcat/webapps:/usr/local/tomcat/webapps"
    links:
      - mysql
    depends_on:
      - spark1
    ports:
      - "8888:8080"
    networks:
        movierec:
            ipv4_address: 172.19.0.6
  nginx:
    restart: always
    image: nginx:1.19
    container_name: nginx
    ports:
      - 86:81
      - 85:80
      - 443:443
    depends_on:
      - tomcat
    volumes:
      - "/temp/dockerMovieRec/nginx/conf.d:/etc/nginx/conf.d"
      - "/temp/dockerMovieRec/nginx/nginx.conf:/etc/nginx/nginx.conf"
      - "/temp/dockerMovieRec/nginx/log:/var/log/nginx"
      - "/temp/dockerMovieRec/nginx/movielog:/var/log/movieLog"
      - "/temp/dockerMovieRec/nginx/www:/var/www"
      - "/temp/dockerMovieRec/nginx/etc/letsencrypt:/etc/letsencrypt"
    networks:
        movierec:
            ipv4_address: 172.19.0.7
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181"
    depends_on:
      - nginx
    networks:
        movierec:
            ipv4_address: 172.19.0.8
  kafka:
    image: wurstmeister/kafka:2.11-0.10.2.2
    container_name: kafka
    ports:
      - "9092"
    depends_on:
      - zookeeper
    links:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 172.19.0.9
      KAFKA_CREATE_TOPICS: "movielog:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
        movierec:
            ipv4_address: 172.19.0.9
  flume:
    image: xumj1996docker/flume
    container_name: flume
    depends_on:
      - kafka
    links:
      - kafka
    volumes:
      - /temp/dockerMovieRec/flume/conf:/usr/local/flume/apache-flume-1.7.0-bin/conf
      - /temp/dockerMovieRec/nginx/movielog:/nginx/movielog
      - /temp/dockerMovieRec/nginx/log:/nginx/log
    networks:
        movierec:
            ipv4_address: 172.19.0.10
networks:
   movierec:
      ipam:
         config:
         - subnet: 172.19.0.0/16
           gateway: 172.19.0.1